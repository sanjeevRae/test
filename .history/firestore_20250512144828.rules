rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Check if the current user is an admin
    function isAdmin() {
      return request.auth != null && 
             getUserData().role == 'admin';
    }
    
    // Match users collection
    match /users/{userId} {
      // Allow users to read their own data or if they are admin
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // Allow new users to create their own document
      allow create: if request.auth != null && 
                     request.auth.uid == userId &&
                     request.resource.data.role == 'user';
      
      // Only admins can change a user's role
      allow update: if request.auth != null && 
                     (
                       // Users can update their own data except role field
                       (request.auth.uid == userId && 
                        request.resource.data.role == resource.data.role) ||
                       // Or they are admin
                       isAdmin()
                     );
                     
      // Only admins can delete user data
      allow delete: if isAdmin();
      
      // Allow admins to list users
      allow list: if isAdmin();
    }
    
    // Match profiles collection (for card profiles)
    match /profiles/{profileId} {
      // Anyone can read profile data
      allow read: if true;
      
      // Only the owner or admins can create/update/delete
      allow write: if request.auth != null && 
                     (
                       // Owner check by associating profileId with userId
                       resource.data.userId == request.auth.uid || 
                       isAdmin()
                     );
    }
    
    // Match analytics collection
    match /analytics/{analyticsId} {
      // Allow users to read their own analytics
      allow read: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || 
                    isAdmin());
      
      // Allow writes from anyone with authentication
      // Will rely on client-side validation
      allow write: if request.auth != null;
    }
    
    // Match audit_logs collection - important for security
    match /audit_logs/{logId} {
      // Only admins can read all logs
      allow read: if isAdmin();
      
      // Allow authenticated users to create logs, but never update/delete them
      allow create: if request.auth != null;
      allow update, delete: if false;
    }
    
    // Match security_alerts collection
    match /security_alerts/{alertId} {
      // Only admins can access security alerts
      allow read, write: if isAdmin();
    }
    
    // Catch-all rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}